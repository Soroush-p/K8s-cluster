- name: Truning off swap
  shell: swapoff -a && free -m
  become: yes
  when: inventory_hostname in groups['masters']

- name: remove swap from fstab
  shell: sed -i '/ swap / s/^/#/' /etc/fstab
  become: yes
  when: inventory_hostname  in groups['masters']

- name: install list of packages APT Transport HTTPS
  action: apt pkg={{item}} state=installed
  with_items:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
      - python-pip
  become: yes
  when: inventory_hostname  in groups['masters']

- name: installing cfssl (downloading binaries)
  get_url:
    url: https://pkg.cfssl.org/R1.2/cfssl_linux-amd64
    dest: /usr/local/bin/cfssl
    mode: 0755
  when: inventory_hostname in groups['masters']

- name: installing cfssl (downloading binaries)
  get_url:
    url: https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64
    dest: /usr/local/bin/cfssljson
    mode: 0755
  when: inventory_hostname in groups['masters']

- name: add Kubernetes apt-key
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  become: yes
  when: inventory_hostname in groups['masters']

- name: add Kubernetes' APT repository
  apt_repository:
   repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
   state: present
   filename: 'kubernetes'
  become: yes
  when: inventory_hostname in groups['masters']

- name: install kubelet
  apt:
    name: kubelet
    state: present
#    update_cache: true
  become: yes
  when: inventory_hostname in groups['masters']

- name: install kubeadm
  apt:
    name: kubeadm
    state: present
  become: yes
  when: inventory_hostname in groups['masters']

- name: install kubectl
  apt:
    name: kubectl
  become: yes
#  when: inventory_hostname not in groups['nodes']

- name: Add the GPG key for the Docker apt repository
  shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

- name: Add the Docker apt repository
  apt_repository:
    repo: '{{ docker_apt_repo_xenial }}'
    state: present
    filename: 'docker.list'
  when: ansible_distribution_release == 'xenial'
  become: yes

#- name: add Docker repository key apt-key
#  apt_key:
#    url: https://download.docker.com/linux/ubuntu/gpg
#    state: present
#  become: yes
#  when: inventory_hostname in groups['masters']

#- name: add Docker repository
#  apt_repository:
#   repo: deb https://download.docker.com/linux/$(. /etc/os-release; echo "$ID") $(lsb_release -cs) stable
#   state: present
#   filename: 'kubernetes'
#  become: yes
#  when: inventory_hostname in groups['masters']

- name: Update the cache
  apt: update_cache=yes
  become: yes

- name: Install Docker
  apt:
    pkg: docker-ce={{ docker_version  }}
    state: present
#    update_cache: yes
  become: yes
  when: inventory_hostname in groups['masters']

- name: Start and enable Docker systemd service
  service: name=docker state=started enabled=yes
  when: inventory_hostname in groups['masters']

- name: Install docker-compose
  get_url:
    url: https://github.com/docker/compose/releases/download/{{ docker_compose_version }}/docker-compose-Linux-x86_64
    dest: /usr/local/bin/docker-compose
    force: yes
  when: inventory_hostname in groups['masters']

- name: Set permissions on docker-compose binary
  file:
    path: /usr/local/bin/docker-compose
    mode: 0755
  when: inventory_hostname in groups['masters']
#- name: installing kubectl (downloading binaries)
#  get_url:
#    url: https://storage.googleapis.com/kubernetes-release/release/v1.12.1/bin/linux/amd64/kubectl
#    dest: /usr/local/bin
#    mode: a+x
#  when: inventory_hostname not in groups['nodes']

- name: Change cgroupdriver to cgroupfs
  shell: "sed -i 's/config.yaml/config.yaml --cgroup-driver=cgroupfs/g' /etc/systemd/system/kubelet.service.d/10-kubeadm.conf"
#  when: inventory_hostname == 'instance01'
  become: yes
  when: inventory_hostname in groups['masters']

- name: Reload Daemon
  systemd:
    state: restarted
    daemon_reload: yes
    name: kubelet
#  when: inventory_hostname == 'instance01'
  become: yes
  when: inventory_hostname in groups['masters']
